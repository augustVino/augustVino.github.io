(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{614:function(t,n,e){"use strict";e.r(n);var a=e(59),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"浅出篇-7-个角度吃透-lodash-防抖节流原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浅出篇-7-个角度吃透-lodash-防抖节流原理"}},[t._v("#")]),t._v(" 浅出篇 7 个角度吃透 Lodash 防抖节流原理")]),t._v(" "),e("h2",{attrs:{id:"引言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),e("p",[t._v("上一节我们学习了 Lodash 中防抖和节流函数是如何实现的，并对源码浅析一二，今天这篇文章会通过七个小例子为切入点，换种方式继续解读源码。")]),t._v(" "),e("h2",{attrs:{id:"节流函数-throttle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节流函数-throttle"}},[t._v("#")]),t._v(" 节流函数 Throttle")]),t._v(" "),e("p",[t._v("我们先来看一张图，这张图充分说明了 "),e("code",[t._v("Throttle")]),t._v("（节流）和 "),e("code",[t._v("Debounce")]),t._v("（防抖）的区别，以及在不同配置下产生的不同效果，其中 "),e("code",[t._v("mousemove")]),t._v(" 事件每 50 ms 触发一次，即下图中的每一小隔是 50 ms。今天这篇文章就从下面这张图开始介绍。")]),t._v(" "),e("image-image",{attrs:{imgSrc:"/img/4.5-1.webp",imgAlt:"4.5-1"}}),t._v(" "),e("h3",{attrs:{id:"角度-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-1"}},[t._v("#")]),t._v(" 角度 1")]),t._v(" "),e("p",[e("code",[t._v("lodash.throttle(fn, 200, {leading: true, trailing: true})")])]),t._v(" "),e("h4",{attrs:{id:"mousemove-第一次触发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousemove-第一次触发"}},[t._v("#")]),t._v(" mousemove 第一次触发")]),t._v(" "),e("p",[t._v("先来看下 throttle 源码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首尾调用默认为 true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" trailing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" func "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Expected a function'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options 是否是对象")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'leading'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" leading\n    trailing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'trailing'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trailing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" trailing\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// maxWait 为 wait 的防抖函数")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    leading"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    trailing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'maxWait'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-73423"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function throttle(func, wait, options) {\n  // 首尾调用默认为 true\n  let leading = true\n  let trailing = true\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function')\n  }\n  // options 是否是对象\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading\n    trailing = 'trailing' in options ? !!options.trailing : trailing\n  }\n  // maxWait 为 wait 的防抖函数\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    'maxWait': wait,\n  })\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-73423","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-57122"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function throttle(func, wait, options) {\n  // 首尾调用默认为 true\n  let leading = true\n  let trailing = true\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function')\n  }\n  // options 是否是对象\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading\n    trailing = 'trailing' in options ? !!options.trailing : trailing\n  }\n  // maxWait 为 wait 的防抖函数\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    'maxWait': wait,\n  })\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-57122","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("所以 "),e("code",[t._v("throttle(fn, 200, {leading: true, trailing: true})")]),t._v(" 返回内容是 "),e("code",[t._v("debounce(fn, 200, {leading: true, trailing: true, maxWait: 200})")]),t._v("，多了 "),e("code",[t._v("maxWait: 200")]),t._v(" 这部分。")]),t._v(" "),e("p",[t._v("先打个预防针，后面即将开始比较难的部分，看下 "),e("code",[t._v("debounce")]),t._v(" 入口函数。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口函数，返回此函数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounced")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前时间")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断此时是否应该执行 func 函数")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isInvoking "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 赋值给闭包，用于其他函数调用")]),t._v("\n  lastArgs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args\n  lastThis "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  lastCallTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isInvoking"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无 timerId 的情况有两种：")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、首次调用 ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、trailingEdge 执行过函数")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("leadingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastCallTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果设置了最大等待时间，则立即执行 func")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、开启定时器，到时间后触发 trailingEdge 这个函数。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、执行 func，并返回结果")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环定时器中处理调用")]),t._v("\n      timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastCallTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一种特殊情况，trailing 设置为 true 时，前一个 wait 的 trailingEdge 已经执行了函数")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时函数被调用时 shouldInvoke 返回 false，所以要开启定时器")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不需要执行时，返回结果")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-3764"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 入口函数，返回此函数\nfunction debounced(...args) {\n  // 获取当前时间\n  const time = Date.now()\n  // 判断此时是否应该执行 func 函数\n  const isInvoking = shouldInvoke(time)\n\n  // 赋值给闭包，用于其他函数调用\n  lastArgs = args\n  lastThis = this\n  lastCallTime = time\n\n  // 执行\n  if (isInvoking) {\n    // 无 timerId 的情况有两种：\n    // 1、首次调用 \n    // 2、trailingEdge 执行过函数\n    if (timerId === undefined) {\n      return leadingEdge(lastCallTime)\n    }\n    \n    // 如果设置了最大等待时间，则立即执行 func\n    // 1、开启定时器，到时间后触发 trailingEdge 这个函数。\n    // 2、执行 func，并返回结果\n    if (maxing) {\n      // 循环定时器中处理调用\n      timerId = startTimer(timerExpired, wait)\n      return invokeFunc(lastCallTime)\n    }\n  }\n  // 一种特殊情况，trailing 设置为 true 时，前一个 wait 的 trailingEdge 已经执行了函数\n  // 此时函数被调用时 shouldInvoke 返回 false，所以要开启定时器\n  if (timerId === undefined) {\n    timerId = startTimer(timerExpired, wait)\n  }\n  // 不需要执行时，返回结果\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-3764","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-30334"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 入口函数，返回此函数\nfunction debounced(...args) {\n  // 获取当前时间\n  const time = Date.now()\n  // 判断此时是否应该执行 func 函数\n  const isInvoking = shouldInvoke(time)\n\n  // 赋值给闭包，用于其他函数调用\n  lastArgs = args\n  lastThis = this\n  lastCallTime = time\n\n  // 执行\n  if (isInvoking) {\n    // 无 timerId 的情况有两种：\n    // 1、首次调用 \n    // 2、trailingEdge 执行过函数\n    if (timerId === undefined) {\n      return leadingEdge(lastCallTime)\n    }\n    \n    // 如果设置了最大等待时间，则立即执行 func\n    // 1、开启定时器，到时间后触发 trailingEdge 这个函数。\n    // 2、执行 func，并返回结果\n    if (maxing) {\n      // 循环定时器中处理调用\n      timerId = startTimer(timerExpired, wait)\n      return invokeFunc(lastCallTime)\n    }\n  }\n  // 一种特殊情况，trailing 设置为 true 时，前一个 wait 的 trailingEdge 已经执行了函数\n  // 此时函数被调用时 shouldInvoke 返回 false，所以要开启定时器\n  if (timerId === undefined) {\n    timerId = startTimer(timerExpired, wait)\n  }\n  // 不需要执行时，返回结果\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-30334","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("对于 "),e("code",[t._v("debounce(fn, 200, {leading: true, trailing: true, maxWait: 200})")]),t._v(" 来说，会经历如下过程。")]),t._v(" "),e("ul",[e("li",[t._v("1、"),e("code",[t._v("shouldInvoke(time)")]),t._v(" 中，因为满足条件 "),e("code",[t._v("lastCallTime === undefined")]),t._v("，所以返回 "),e("code",[t._v("true")])]),t._v(" "),e("li",[t._v("2、"),e("code",[t._v("lastCallTime = time")]),t._v("，所以 "),e("code",[t._v("lastCallTime")]),t._v(" 等于当前时间，假设为 0")]),t._v(" "),e("li",[t._v("3、"),e("code",[t._v("timerId === undefined")]),t._v(" 满足，执行 "),e("code",[t._v("leadingEdge(lastCallTime)")]),t._v(" 方法")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行连续事件刚开始的那次回调")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("leadingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、设置上一次执行 func 的时间")]),t._v("\n  lastInvokeTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、开启定时器，为了事件结束后的那次回调")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、如果配置了 leading 执行传入函数 func")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// leading 来源自 !!options.leading")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-30340"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-30340","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-30287"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-30287","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("4、在 "),e("code",[t._v("leadingEdge(time)")]),t._v(" 中，设置 "),e("code",[t._v("lastInvokeTime")]),t._v(" 为当前时间即 0，开启 200 毫秒定时器，执行 "),e("code",[t._v("invokeFunc(time)")]),t._v(" 并返回")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 Func 函数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取上一次执行 debounced 的参数")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastArgs\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取上一次的 this")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" thisArg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastThis\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置")]),t._v("\n  lastArgs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastThis "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n  lastInvokeTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time\n  result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-3889"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行 Func 函数\nfunction invokeFunc(time) {\n  // 获取上一次执行 debounced 的参数\n  const args = lastArgs\n  // 获取上一次的 this\n  const thisArg = lastThis\n\n  // 重置\n  lastArgs = lastThis = undefined\n  lastInvokeTime = time\n  result = func.apply(thisArg, args)\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-3889","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715957-96587"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行 Func 函数\nfunction invokeFunc(time) {\n  // 获取上一次执行 debounced 的参数\n  const args = lastArgs\n  // 获取上一次的 this\n  const thisArg = lastThis\n\n  // 重置\n  lastArgs = lastThis = undefined\n  lastInvokeTime = time\n  result = func.apply(thisArg, args)\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715957-96587","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("5、在 "),e("code",[t._v("invokeFunc(time)")]),t._v(" 中，执行 "),e("code",[t._v("func.apply(thisArg, args)")]),t._v("，即 fn 函数第一次执行，并把结果赋值给 result，便于后续触发时直接返回。同时重置 "),e("code",[t._v("lastInvokeTime")]),t._v(" 为当前时间即 0，清空 "),e("code",[t._v("lastArgs")]),t._v(" 和 "),e("code",[t._v("lastThis")]),t._v("。")]),t._v(" "),e("li",[t._v("6、第一次触发已经完成，注意此时 "),e("code",[t._v("lastCallTime")]),t._v(" 和 "),e("code",[t._v("lastInvokeTime")]),t._v(" 都为 0，200 毫秒的定时器还在运行中。")])]),t._v(" "),e("h4",{attrs:{id:"mousemove-第二次触发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousemove-第二次触发"}},[t._v("#")]),t._v(" mousemove 第二次触发")]),t._v(" "),e("p",[t._v("50 毫秒后第二次触发到来，此时当前时间 "),e("code",[t._v("time")]),t._v(" 为 50，"),e("code",[t._v("wait")]),t._v(" 为 200， "),e("code",[t._v("maxWait")]),t._v(" 为 200，"),e("code",[t._v("maxing")]),t._v(" 为 true，"),e("code",[t._v("lastCallTime")]),t._v(" 和 "),e("code",[t._v("lastInvokeTime")]),t._v(" 都为 0，"),e("code",[t._v("timerId")]),t._v(" 定时器存在，我们来看下执行步骤。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次调用 debounce 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastCallTime\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次执行 func 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastInvokeTime\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下述 4 种情况返回 true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" lastCallTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" maxWait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-74568"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-74568","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-36120"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"function shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-36120","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("1、"),e("code",[t._v("shouldInvoke(time)")]),t._v(" 中，"),e("code",[t._v("timeSinceLastCall")]),t._v(" 为 50，"),e("code",[t._v("timeSinceLastInvoke")]),t._v(" 为 50，4 种条件都不满足，返回 false。")]),t._v(" "),e("li",[t._v("2、此时 "),e("code",[t._v("isInvoking")]),t._v(" 为 false，同时 "),e("code",[t._v("timerId === undefined")]),t._v(" 不满足，直接返回第一次触发时的 "),e("code",[t._v("result")])]),t._v(" "),e("li",[t._v("3、第二次触发完成，并不会执行 fn，只会返回上次执行的结果 "),e("code",[t._v("result")])]),t._v(" "),e("li",[t._v("4、第三次和第四次触发时，效果一样，就不再重复了。")])]),t._v(" "),e("h4",{attrs:{id:"mousemove-第五次触发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousemove-第五次触发"}},[t._v("#")]),t._v(" mousemove 第五次触发")]),t._v(" "),e("p",[t._v("距第一次触发 200 毫秒后第五次触发到来，此时当前时间 "),e("code",[t._v("time")]),t._v(" 为 200，"),e("code",[t._v("wait")]),t._v(" 为 200， "),e("code",[t._v("maxWait")]),t._v(" 为 200，"),e("code",[t._v("maxing")]),t._v(" 为 true，"),e("code",[t._v("lastCallTime")]),t._v(" 为 150， "),e("code",[t._v("lastInvokeTime")]),t._v(" 为 0，timerId 定时器存在，我们来看下执行步骤。")]),t._v(" "),e("ul",[e("li",[t._v("1、"),e("code",[t._v("shouldInvoke(time)")]),t._v(" 中，"),e("code",[t._v("timeSinceLastInvoke")]),t._v(" 为 200，满足"),e("code",[t._v("(maxing && timeSinceLastInvoke >= maxWait)")]),t._v("，所以返回 "),e("code",[t._v("true")])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// debounced 方法中执行到这部分")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环定时器中处理调用")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastCallTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-8237"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// debounced 方法中执行到这部分\nif (maxing) {\n  // 循环定时器中处理调用\n  timerId = startTimer(timerExpired, wait)\n  return invokeFunc(lastCallTime)\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-8237","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-28415"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// debounced 方法中执行到这部分\nif (maxing) {\n  // 循环定时器中处理调用\n  timerId = startTimer(timerExpired, wait)\n  return invokeFunc(lastCallTime)\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-28415","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("2、满足 "),e("code",[t._v("maxing")]),t._v(" 条件，重新开启 200 毫秒的定时器，并执行 "),e("code",[t._v("invokeFunc(lastCallTime)")]),t._v(" 函数")]),t._v(" "),e("li",[t._v("3、"),e("code",[t._v("invokeFunc(time)")]),t._v(" 中，重置 "),e("code",[t._v("lastInvokeTime")]),t._v(" 为当前时间即 200，清空 "),e("code",[t._v("lastArgs")]),t._v(" 和 "),e("code",[t._v("lastThis")])]),t._v(" "),e("li",[t._v("4、第六、七、八次触发时，同第二次触发效果一致，就不再重复了。")])]),t._v(" "),e("h4",{attrs:{id:"mousemove-停止触发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousemove-停止触发"}},[t._v("#")]),t._v(" mousemove 停止触发")]),t._v(" "),e("p",[t._v("假设第八次触发之后就停止了滚动，在第八次触发时 "),e("code",[t._v("time")]),t._v(" 为 350，所以如果有第九次触发，那么此时是应该执行fn 的，但是此时 "),e("code",[t._v("mousemove")]),t._v(" 已经停止了触发，那么还会执行 fn 吗？答案是依旧执行，因为最开始设置了 "),e("code",[t._v("{trailing: true}")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启定时器")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("pendingFunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没传 wait 时调用 window.requestAnimationFrame()")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("useRAF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若想在浏览器下次重绘之前继续更新下一帧动画")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么回调函数自身必须再次调用 window.requestAnimationFrame()")]),t._v("\n    root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancelAnimationFrame")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pendingFunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用 RAF 时开启定时器")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pendingFunc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-58508"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 开启定时器\nfunction startTimer(pendingFunc, wait) {\n  // 没传 wait 时调用 window.requestAnimationFrame()\n  if (useRAF) {\n    // 若想在浏览器下次重绘之前继续更新下一帧动画\n    // 那么回调函数自身必须再次调用 window.requestAnimationFrame()\n    root.cancelAnimationFrame(timerId);\n    return root.requestAnimationFrame(pendingFunc)\n  }\n  // 不使用 RAF 时开启定时器\n  return setTimeout(pendingFunc, wait)\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-58508","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-69764"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 开启定时器\nfunction startTimer(pendingFunc, wait) {\n  // 没传 wait 时调用 window.requestAnimationFrame()\n  if (useRAF) {\n    // 若想在浏览器下次重绘之前继续更新下一帧动画\n    // 那么回调函数自身必须再次调用 window.requestAnimationFrame()\n    root.cancelAnimationFrame(timerId);\n    return root.requestAnimationFrame(pendingFunc)\n  }\n  // 不使用 RAF 时开启定时器\n  return setTimeout(pendingFunc, wait)\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-69764","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("在第五次触发时开启了 200 毫秒的定时器，所以在时间 "),e("code",[t._v("time")]),t._v(" 到 400 时会执行 "),e("code",[t._v("pendingFunc")]),t._v("，此时的 "),e("code",[t._v("pendingFunc")]),t._v(" 就是 "),e("code",[t._v("timerExpired")]),t._v(" 函数，来看下具体的代码。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定时器回调函数，表示定时结束后的操作")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("timerExpired")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、是否需要执行")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行事件结束后的那次回调，否则重启定时器")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trailingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("remainingWait")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-20781"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 定时器回调函数，表示定时结束后的操作\nfunction timerExpired() {\n  const time = Date.now()\n  // 1、是否需要执行\n  // 执行事件结束后的那次回调，否则重启定时器\n  if (shouldInvoke(time)) {\n    return trailingEdge(time)\n  }\n  // 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发\n  timerId = startTimer(timerExpired, remainingWait(time))\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-20781","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715958-13491"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 定时器回调函数，表示定时结束后的操作\nfunction timerExpired() {\n  const time = Date.now()\n  // 1、是否需要执行\n  // 执行事件结束后的那次回调，否则重启定时器\n  if (shouldInvoke(time)) {\n    return trailingEdge(time)\n  }\n  // 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发\n  timerId = startTimer(timerExpired, remainingWait(time))\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715958-13491","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("此时在 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 中，"),e("code",[t._v("time")]),t._v(" 为 400，"),e("code",[t._v("lastInvokeTime")]),t._v(" 为 200，"),e("code",[t._v("timeSinceLastInvoke")]),t._v(" 为 200，满足 "),e("code",[t._v("(maxing && timeSinceLastInvoke >= maxWait)")]),t._v("，所以返回 "),e("code",[t._v("true")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行连续事件结束后的那次回调")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trailingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空定时器")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trailing 和 lastArgs 两者同时存在时执行")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trailing 来源自 'trailing' in options ? !!options.trailing : trailing")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastArgs 标记位的作用，意味着 debounce 至少执行过一次")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trailing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" lastArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空参数")]),t._v("\n  lastArgs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastThis "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-71834"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件结束后的那次回调\nfunction trailingEdge(time) {\n  // 清空定时器\n  timerId = undefined\n\n  // trailing 和 lastArgs 两者同时存在时执行\n  // trailing 来源自 'trailing' in options ? !!options.trailing : trailing\n  // lastArgs 标记位的作用，意味着 debounce 至少执行过一次\n  if (trailing && lastArgs) {\n    return invokeFunc(time)\n  }\n  // 清空参数\n  lastArgs = lastThis = undefined\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-71834","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-30665"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件结束后的那次回调\nfunction trailingEdge(time) {\n  // 清空定时器\n  timerId = undefined\n\n  // trailing 和 lastArgs 两者同时存在时执行\n  // trailing 来源自 'trailing' in options ? !!options.trailing : trailing\n  // lastArgs 标记位的作用，意味着 debounce 至少执行过一次\n  if (trailing && lastArgs) {\n    return invokeFunc(time)\n  }\n  // 清空参数\n  lastArgs = lastThis = undefined\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-30665","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("之后执行 "),e("code",[t._v("trailingEdge(time)")]),t._v("，在这个函数中判断 "),e("code",[t._v("trailing")]),t._v(" 和 "),e("code",[t._v("lastArgs")]),t._v(" ，此时这两个条件都是 "),e("code",[t._v("true")]),t._v("，所以会执行 "),e("code",[t._v("invokeFunc(time)")]),t._v("，最终执行函数 fn。")]),t._v(" "),e("p",[t._v("这里需要说明以下两点")]),t._v(" "),e("ul",[e("li",[t._v("如果设置了 "),e("code",[t._v("{trailing: false}")]),t._v("，那么最后一次是不会执行的。对于 "),e("code",[t._v("throttle")]),t._v(" 和 "),e("code",[t._v("debounce")]),t._v(" 来说，默认值是 true，所以如果没有特意指定 "),e("code",[t._v("trailing")]),t._v("，那么最后一次是一定会执行的。")]),t._v(" "),e("li",[t._v("对于 "),e("code",[t._v("lastArgs")]),t._v(" 来说，执行 "),e("code",[t._v("debounced")]),t._v(" 时会赋值，即每次触发都会重新赋值一次，那什么时候清空呢，在 "),e("code",[t._v("invokeFunc(time)")]),t._v(" 中执行 fn 函数时重置为 "),e("code",[t._v("undefined")]),t._v("，所以如果 "),e("code",[t._v("debounced")]),t._v(" 只触发了一次，即使设置了 "),e("code",[t._v("{trailing: true}")]),t._v(" 那也不会再执行 fn 函数，这个就解答了上篇文章留下的第一道思考题。")])]),t._v(" "),e("h3",{attrs:{id:"角度-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-2"}},[t._v("#")]),t._v(" 角度 2")]),t._v(" "),e("p",[e("code",[t._v("lodash.throttle(fn, 200, {leading: true, trailing: false})")])]),t._v(" "),e("p",[t._v("在「角度 1 之 "),e("code",[t._v("mousemove")]),t._v(" 停止触发」这部分中说到，如果不设置 "),e("code",[t._v("trailing")]),t._v(" 和设置 "),e("code",[t._v("{trailing: true}")]),t._v(" 效果是一样的，事件回调结束后都会再执行一次传入函数 fn，但是如果设置了"),e("code",[t._v("{trailing: false}")]),t._v("，那么事件回调结束后是不会再执行 fn 的。")]),t._v(" "),e("p",[t._v("此时的配置对比角度 1 来说，区别在于设置了"),e("code",[t._v("{trailing: false}")]),t._v("，所以实际效果对比 1 来说，就是最后不会额外再执行一次，效果见第一张图。")]),t._v(" "),e("h3",{attrs:{id:"角度-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-3"}},[t._v("#")]),t._v(" 角度 3")]),t._v(" "),e("p",[e("code",[t._v("lodash.throttle(fn, 200, {leading: false, trailing: true})")])]),t._v(" "),e("p",[t._v("此时的配置和角度 1 相比，区别在于设置了 "),e("code",[t._v("{leading: false}")]),t._v("，所以直接看 "),e("code",[t._v("leadingEdge(time)")]),t._v(" 方法就可以了。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行连续事件刚开始的那次回调")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("leadingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、设置上一次执行 func 的时间")]),t._v("\n  lastInvokeTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、开启定时器，为了事件结束后的那次回调")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、如果配置了 leading 执行传入函数 func")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// leading 来源自 !!options.leading")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-86318"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-86318","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-20773"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-20773","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("p",[t._v("在这里，会开启 200 毫秒的定时器，同时因为 "),e("code",[t._v("leading")]),t._v(" 为 false，所以并不会执行 "),e("code",[t._v("invokeFunc(time)")]),t._v(" ，只会返回 "),e("code",[t._v("result")]),t._v("，此时的 "),e("code",[t._v("result")]),t._v(" 值是 "),e("code",[t._v("undefined")]),t._v("。")]),t._v(" "),e("p",[t._v("这里开启一个定时器的目的是为了事件结束后的那次回调，即如果设置了 "),e("code",[t._v("{trailing: true}")]),t._v(" 那么最后一次回调将执行传入函数 fn，哪怕 "),e("code",[t._v("debounced")]),t._v(" 函数只触发一次。")]),t._v(" "),e("p",[t._v("这里指定了 "),e("code",[t._v("{leading: false}")]),t._v("，那么 "),e("code",[t._v("leading")]),t._v(" 的初始值是什么呢？在 "),e("code",[t._v("debounce")]),t._v(" 中是 false，在 "),e("code",[t._v("throttle")]),t._v(" 中是 true。所以在 "),e("code",[t._v("throttle")]),t._v(" 中不需要刚开始就触发时，必须指定 "),e("code",[t._v("{leading: false}")]),t._v("，在 debounce 中就不需要了，默认不触发。")]),t._v(" "),e("h2",{attrs:{id:"防抖函数-debounce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防抖函数-debounce"}},[t._v("#")]),t._v(" 防抖函数 Debounce")]),t._v(" "),e("h3",{attrs:{id:"角度-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-4"}},[t._v("#")]),t._v(" 角度 4")]),t._v(" "),e("p",[e("code",[t._v("lodash.debounce(fn, 200, {leading: false, trailing: true})")])]),t._v(" "),e("p",[t._v("此时相比较 "),e("code",[t._v("throttle")]),t._v(" 来说，缺少了 "),e("code",[t._v("maxWait")]),t._v(" 值，所以具体触发过程中的判断就不一样了，来详细看一遍。")]),t._v(" "),e("ul",[e("li",[t._v("1、在入口函数 "),e("code",[t._v("debounced")]),t._v(" 中，执行 "),e("code",[t._v("shouldInvoke(time)")]),t._v("，前面讨论过因为第一次触发所以会返回 true，之后执行 "),e("code",[t._v("leadingEdge(lastCallTime)")]),t._v("。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行连续事件刚开始的那次回调")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("leadingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、设置上一次执行 func 的时间")]),t._v("\n  lastInvokeTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、开启定时器，为了事件结束后的那次回调")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、如果配置了 leading 执行传入函数 func")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// leading 来源自 !!options.leading")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" leading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-26210"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-26210","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-13638"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件刚开始的那次回调\nfunction leadingEdge(time) {\n  // 1、设置上一次执行 func 的时间\n  lastInvokeTime = time\n  // 2、开启定时器，为了事件结束后的那次回调\n  timerId = startTimer(timerExpired, wait)\n  // 3、如果配置了 leading 执行传入函数 func\n  // leading 来源自 !!options.leading\n  return leading ? invokeFunc(time) : result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-13638","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("2、在 "),e("code",[t._v("leadingEdge")]),t._v(" 中，因为 "),e("code",[t._v("leading")]),t._v(" 为 false，所以并不执行 fn，只开启 200 毫秒的定时器，并返回 "),e("code",[t._v("undefined")]),t._v("。此时 "),e("code",[t._v("lastInvokeTime")]),t._v(" 为当前时间，假设为 0。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断此时是否应该执行 func 函数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次调用 debounce 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastCallTime\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次执行 func 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastInvokeTime\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下述 4 种情况返回 true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" lastCallTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" maxWait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-56091"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 判断此时是否应该执行 func 函数\nfunction shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-56091","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-83482"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 判断此时是否应该执行 func 函数\nfunction shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-83482","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("3、之后每次触发时，"),e("code",[t._v("timeSinceLastCall")]),t._v(" 总是为 50 毫秒，"),e("code",[t._v("maxing")]),t._v(" 为 false，所以 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 总是返回 false，并不会执行传入函数 fn，只返回 "),e("code",[t._v("result")]),t._v("，即为 "),e("code",[t._v("undefined")]),t._v("。")]),t._v(" "),e("li",[t._v("4、到现在为止，fn 一次还没有执行，200 毫秒后，定时器回调函数触发，执行 "),e("code",[t._v("timerExpired")]),t._v(" 函数")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定时器回调函数，表示定时结束后的操作")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("timerExpired")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、是否需要执行")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行事件结束后的那次回调，否则重启定时器")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trailingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTimer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timerExpired"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("remainingWait")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-83611"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 定时器回调函数，表示定时结束后的操作\nfunction timerExpired() {\n  const time = Date.now()\n  // 1、是否需要执行\n  // 执行事件结束后的那次回调，否则重启定时器\n  if (shouldInvoke(time)) {\n    return trailingEdge(time)\n  }\n  // 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发\n  timerId = startTimer(timerExpired, remainingWait(time))\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-83611","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715959-65123"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 定时器回调函数，表示定时结束后的操作\nfunction timerExpired() {\n  const time = Date.now()\n  // 1、是否需要执行\n  // 执行事件结束后的那次回调，否则重启定时器\n  if (shouldInvoke(time)) {\n    return trailingEdge(time)\n  }\n  // 2、否则 计算剩余等待时间，重启定时器，保证下一次时延的末尾触发\n  timerId = startTimer(timerExpired, remainingWait(time))\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715959-65123","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("5、此时存在两种情况，第一种是 "),e("code",[t._v("mousemove")]),t._v(" 事件一直在触发，根据前面介绍 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 会返回 false，之后就将计算剩余等待时间，重启定时器。时间计算公式为 "),e("code",[t._v("wait - (time - lastCallTime)")]),t._v("，即 200 - 50，所以只要 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 返回 false，就每隔 150 毫秒后执行一次 "),e("code",[t._v("timerExpired()")]),t._v("。")]),t._v(" "),e("li",[t._v("6、第二种情况是 "),e("code",[t._v("mousemove")]),t._v(" 事件不再触发，因为 "),e("code",[t._v("timerExpired()")]),t._v(" 在循环执行，所以肯定会存在一种情况满足 "),e("code",[t._v("timeSinceLastCall >= wait")]),t._v("，即 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 返回 true，终结 "),e("code",[t._v("timerExpired()")]),t._v("的循环，并执行 "),e("code",[t._v("trailingEdge(time)")]),t._v("。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行连续事件结束后的那次回调")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trailingEdge")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空定时器")]),t._v("\n  timerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trailing 和 lastArgs 两者同时存在时执行")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trailing 来源自 'trailing' in options ? !!options.trailing : trailing")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastArgs 标记位的作用，意味着 debounce 至少执行过一次")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trailing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" lastArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空参数")]),t._v("\n  lastArgs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastThis "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-97851"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件结束后的那次回调\nfunction trailingEdge(time) {\n  // 清空定时器\n  timerId = undefined\n\n  // trailing 和 lastArgs 两者同时存在时执行\n  // trailing 来源自 'trailing' in options ? !!options.trailing : trailing\n  // lastArgs 标记位的作用，意味着 debounce 至少执行过一次\n  if (trailing && lastArgs) {\n    return invokeFunc(time)\n  }\n  // 清空参数\n  lastArgs = lastThis = undefined\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-97851","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-39952"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 执行连续事件结束后的那次回调\nfunction trailingEdge(time) {\n  // 清空定时器\n  timerId = undefined\n\n  // trailing 和 lastArgs 两者同时存在时执行\n  // trailing 来源自 'trailing' in options ? !!options.trailing : trailing\n  // lastArgs 标记位的作用，意味着 debounce 至少执行过一次\n  if (trailing && lastArgs) {\n    return invokeFunc(time)\n  }\n  // 清空参数\n  lastArgs = lastThis = undefined\n  return result\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-39952","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("7、在 "),e("code",[t._v("trailingEdge")]),t._v(" 中 "),e("code",[t._v("trailing")]),t._v(" 和 "),e("code",[t._v("lastArgs")]),t._v(" 都是 true，所以会执行 "),e("code",[t._v("invokeFunc(time)")]),t._v("，即执行传入函数 fn。")]),t._v(" "),e("li",[t._v("8、所以整个过程中只在最后执行一次传入函数 fn，效果同上面第一张图所示。")])]),t._v(" "),e("h3",{attrs:{id:"角度-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-5"}},[t._v("#")]),t._v(" 角度 5")]),t._v(" "),e("p",[e("code",[t._v("lodash.debounce(fn, 200, {leading: true, trailing: false})")])]),t._v(" "),e("p",[t._v("此时相比角度 4 来说，差异在于 "),e("code",[t._v("{leading: true, trailing: false}")]),t._v("，但是 "),e("code",[t._v("wait")]),t._v(" 和 "),e("code",[t._v("maxWait")]),t._v(" 都和角度 4 一致，所以只存在下面 2 种区别，效果同上面第一张图所示。")]),t._v(" "),e("ul",[e("li",[t._v("区别 1："),e("code",[t._v("leadingEdge")]),t._v(" 中会执行传入函数 fn")]),t._v(" "),e("li",[t._v("区别 2："),e("code",[t._v("trailingEdge")]),t._v(" 中不再执行传入函数 fn")])]),t._v(" "),e("h3",{attrs:{id:"角度-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-6"}},[t._v("#")]),t._v(" 角度 6")]),t._v(" "),e("p",[e("code",[t._v("lodash.debounce(fn, 200, {leading: true, trailing: true})")])]),t._v(" "),e("p",[t._v("此时相比角度 4 来说，差异仅仅在于设置了 "),e("code",[t._v("{leading: true}")]),t._v("，所以只存在一个区别，那就是在 "),e("code",[t._v("leadingEdge")]),t._v(" 中会执行传入函数 fn，当然在 "),e("code",[t._v("trailingEdge")]),t._v(" 中依旧执行传入函数 fn，所以会出现在 "),e("code",[t._v("mousemove")]),t._v(" 事件触发过程中首尾都会执行的情况，效果同上面第一张图所示。")]),t._v(" "),e("p",[t._v("当然一种情况除外，那就是 "),e("code",[t._v("mousemove")]),t._v(" 事件永远只触发一次的情况，关键在于 "),e("code",[t._v("lastArgs")]),t._v(" 变量。")]),t._v(" "),e("p",[t._v("对于 "),e("code",[t._v("lastArgs")]),t._v(" 变量来说，在入口函数 "),e("code",[t._v("debounced")]),t._v(" 中赋值，即每次触发都会重新赋值一次，那什么时候清空呢，在 "),e("code",[t._v("invokeFunc(time)")]),t._v(" 中重置为 undefined，所以如果 "),e("code",[t._v("debounced")]),t._v(" 只触发了一次，而且在 "),e("code",[t._v("{leading: true}")]),t._v(" 时执行过一次 fn，那么即使设置了 "),e("code",[t._v("{trailing: true}")]),t._v(" 也不会再执行传入函数 fn。")]),t._v(" "),e("h3",{attrs:{id:"角度-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#角度-7"}},[t._v("#")]),t._v(" 角度 7")]),t._v(" "),e("p",[e("code",[t._v("lodash.debounce(fn, 200, {leading: false, trailing: true, maxWait: 400})")])]),t._v(" "),e("p",[t._v("此时 "),e("code",[t._v("wait")]),t._v(" 为 200，"),e("code",[t._v("maxWait")]),t._v(" 为 400，"),e("code",[t._v("maxing")]),t._v(" 为 true，我们来看下执行过程。")]),t._v(" "),e("ul",[e("li",[t._v("1、第一次触发时，因为 "),e("code",[t._v("{leading: false}")]),t._v("，所以肯定不会执行 fn，此时开启了一个 200 毫秒的定时器。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断此时是否应该执行 func 函数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldInvoke")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次调用 debounce 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastCallTime\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次执行 func 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastInvokeTime\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下述 4 种情况返回 true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" lastCallTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" wait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxing "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" maxWait"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-80362"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 判断此时是否应该执行 func 函数\nfunction shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-80362","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-63861"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 判断此时是否应该执行 func 函数\nfunction shouldInvoke(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n\n  // 下述 4 种情况返回 true\n  return ( lastCallTime === undefined || \n          (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || \n          (maxing && timeSinceLastInvoke >= maxWait) )\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-63861","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("2、之后每隔 50 毫秒触发一次，每次都会执行 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 函数，只有在第 400 毫秒时，才会满足 "),e("code",[t._v("maxing && timeSinceLastInvoke >= maxWait")]),t._v("，返回 true。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算仍需等待的时间")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("remainingWait")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次调用 debounce 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastCall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastCallTime\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前时间距离上一次执行 func 的时间差")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeSinceLastInvoke "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastInvokeTime\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剩余等待时间")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timeWaiting "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wait "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" timeSinceLastCall\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否设置了最大等待时间")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是（节流）：返回「剩余等待时间」和「距上次执行 func 的剩余等待时间」中的最小值")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否：返回剩余等待时间")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" maxing\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeWaiting"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxWait "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" timeSinceLastInvoke"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" timeWaiting\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-25092"}},[t._v("copy success")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 计算仍需等待的时间\nfunction remainingWait(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n  // 剩余等待时间\n  const timeWaiting = wait - timeSinceLastCall\n\n  // 是否设置了最大等待时间\n\t// 是（节流）：返回「剩余等待时间」和「距上次执行 func 的剩余等待时间」中的最小值\n\t// 否：返回剩余等待时间\n  return maxing\n    ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n  \t: timeWaiting\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-25092","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("copy")])]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1589775715960-25685"}},[t._v("Copy successed")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"// 计算仍需等待的时间\nfunction remainingWait(time) {\n  // 当前时间距离上一次调用 debounce 的时间差\n  const timeSinceLastCall = time - lastCallTime\n  // 当前时间距离上一次执行 func 的时间差\n  const timeSinceLastInvoke = time - lastInvokeTime\n  // 剩余等待时间\n  const timeWaiting = wait - timeSinceLastCall\n\n  // 是否设置了最大等待时间\n\t// 是（节流）：返回「剩余等待时间」和「距上次执行 func 的剩余等待时间」中的最小值\n\t// 否：返回剩余等待时间\n  return maxing\n    ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n  \t: timeWaiting\n}\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1589775715960-25685","data-mdic-notify-delay":"1000","data-mdic-copy-fail-text":"Copy failed",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("Copy")])])])]),e("ul",[e("li",[t._v("3、但是在这之前的第 200 毫秒，定时器触发回调函数，执行 "),e("code",[t._v("timerExpired")]),t._v("，因为此时 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 返回 false，所以会重新计算剩余等待时间并重启计时器，其中 "),e("code",[t._v("timeWaiting")]),t._v(" 是 150 毫秒，"),e("code",[t._v("maxWait - timeSinceLastInvoke")]),t._v(" 是 200 毫秒，所以计算结果是150 毫秒。")]),t._v(" "),e("li",[t._v("4、150 毫秒之后，即自开始之后的第 350 毫秒时，会重新计算时间，其中 "),e("code",[t._v("timeWaiting")]),t._v(" 依旧是 150 毫秒，"),e("code",[t._v("maxWait - timeSinceLastInvoke")]),t._v(" 是 50 毫秒，所以重新开启 50 毫秒的定时器，即在第 400 毫秒时触发。")]),t._v(" "),e("li",[t._v("5、此时会发现定时器触发的时间是第 400 毫秒，"),e("code",[t._v("shouldInvoke(time)")]),t._v(" 中返回 true 的时间也是在第 400 毫秒，为什么要这样呢？这样会冲突吗？首先定时器剩余时间判断和 "),e("code",[t._v("shouldInvoke(time)")]),t._v(" 判断中，只要有一处满足执行 fn 条件，就会立马执行，同时 "),e("code",[t._v("lastInvokeTime")]),t._v(" 值也会发生改变，所以另一处判断就不会生效了。另外本身定时器是不精准的，所以通过 "),e("code",[t._v("Math.min(timeWaiting, maxWait - timeSinceLastInvoke)")]),t._v(" 取最小值的方式来减少误差。")]),t._v(" "),e("li",[t._v("6、于此同时，需要在 "),e("code",[t._v("debounced")]),t._v(" 入口函数添加这么一句 "),e("code",[t._v("if (timerId === undefined) {timerId = startTimer(timerExpired, wait)}")]),t._v("，避免 "),e("code",[t._v("trailingEdge")]),t._v(" 执行后定时器被清空。")]),t._v(" "),e("li",[t._v("7、最终效果和节流是一样的，只是时间间隔变大了而已，具体效果同第一张图所示。")])]),t._v(" "),e("star-star"),t._v(" "),e("comment-comment"),t._v(" "),e("back-to-top")],1)}),[],!1,null,null,null);n.default=s.exports}}]);