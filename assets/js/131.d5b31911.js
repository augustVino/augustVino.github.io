(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{687:function(_,v,o){"use strict";o.r(v);var e=o(59),t=Object(e.a)({},(function(){var _=this,v=_.$createElement,o=_._self._c||v;return o("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[o("h1",{attrs:{id:"chrome-调试工具技巧"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#chrome-调试工具技巧"}},[_._v("#")]),_._v(" Chrome 调试工具技巧")]),_._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),o("p",[_._v("源于"),o("a",{attrs:{href:"https://juejin.im/post/5c09a80151882521c81168a2",target:"_blank",rel:"noopener noreferrer"}},[_._v("你不知道的Chrome调试工具技巧"),o("OutboundLink")],1),_._v(",共有24天的内容,本文是在阅读过程中的一点总结（基于个人技术水平和对Chrome的了解程度，选取适用于自己的），只用于自己研究学习，本文中没有涉及到的，还请移步"),o("a",{attrs:{href:"https://juejin.im/post/5c09a80151882521c81168a2",target:"_blank",rel:"noopener noreferrer"}},[_._v("原文"),o("OutboundLink")],1),_._v(".")])]),_._v(" "),o("h2",{attrs:{id:"_1-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-0"}},[_._v("#")]),_._v(" 1."),o("code",[_._v("$0")])]),_._v(" "),o("p",[_._v("在 "),o("code",[_._v("Chrome")]),_._v(" 的 "),o("code",[_._v("Elements")]),_._v(" 面板中，"),o("code",[_._v("$0")]),_._v(" 是当前我们选中的 "),o("code",[_._v("html")]),_._v(" 节点的引用。")]),_._v(" "),o("p",[_._v("理所当然，"),o("code",[_._v("$1")]),_._v(" 就是我们上一次选择的节点的引用，"),o("code",[_._v("$2")]),_._v(" 是在那之前选择的节点的引用，等等。一直到 "),o("code",[_._v("$4")])]),_._v(" "),o("p",[_._v("你可以通过其他引用来尝试相关操作 (例如: "),o("code",[_._v("$1.appendChild($0)")]),_._v(")")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-1",imgAlt:"tool1.7-1"}}),_._v(" "),o("h2",{attrs:{id:"_2-和"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-和"}},[_._v("#")]),_._v(" 2."),o("code",[_._v("$")]),_._v("和"),o("code",[_._v("$$")])]),_._v(" "),o("p",[_._v("如果你没有在 "),o("code",[_._v("App")]),_._v(" 中定义过 "),o("code",[_._v("$")]),_._v(" 变量 (例如 "),o("code",[_._v("jQuery")]),_._v(" )的话，它在 "),o("code",[_._v("console")]),_._v(" 中就是对这一大串函数 "),o("code",[_._v("document.querySelector")]),_._v(" 的别名。")]),_._v(" "),o("p",[_._v("如果是 "),o("code",[_._v("$$")]),_._v(" 就更加厉害了，还能节省更多的时间，因为它不仅执行 "),o("code",[_._v("document.QuerySelectorAll")]),_._v(" 并且它返回的是：一个节点的 "),o("strong",[_._v("数组")]),_._v(" ，而不是一个 "),o("code",[_._v("Node list")])]),_._v(" "),o("p",[o("code",[_._v("Array.from(document.querySelectorAll('div')) === $$('div')")]),_._v(" 和 "),o("code",[_._v("$$('div')")]),_._v("\n哪一种方式更加优雅呢？")]),_._v(" "),o("h2",{attrs:{id:"_3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3"}},[_._v("#")]),_._v(" 3."),o("code",[_._v("$_")])]),_._v(" "),o("p",[_._v("$_ 是对上次执行的结果的引用。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-2",imgAlt:"tool1.7-2"}}),_._v(" "),o("h2",{attrs:{id:"_4-i"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-i"}},[_._v("#")]),_._v(" 4."),o("code",[_._v("$i")])]),_._v(" "),o("p",[_._v("在 "),o("a",{attrs:{href:"https://chrome.google.com/webstore/detail/console-importer/hgajpakhafplebkdljleajgbpdmplhie/related",target:"_blank",rel:"noopener noreferrer"}},[_._v("Chrome插件:Console Importer"),o("OutboundLink")],1),_._v(" 的帮助之下，你可以快速的在 "),o("code",[_._v("console")]),_._v(" 中引入和把玩一些 "),o("code",[_._v("npm")]),_._v(" 库。")]),_._v(" "),o("p",[_._v("直接运行例如 "),o("code",[_._v("$i('lodash')")]),_._v(" 或者 "),o("code",[_._v("$i('moment')")]),_._v(" 几秒钟之后，就可以获取到 "),o("code",[_._v("lodash / momentjs")]),_._v(" 了。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-3",imgAlt:"tool1.7-3"}}),_._v(" "),o("h2",{attrs:{id:"_5-copy"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-copy"}},[_._v("#")]),_._v(" 5."),o("code",[_._v("copy(...)")])]),_._v(" "),o("p",[_._v("你可以通过全局的方法 "),o("code",[_._v("copy()")]),_._v(" 在 "),o("code",[_._v("console")]),_._v(" 里 "),o("code",[_._v("copy")]),_._v(" 任何你能拿到的资源，包括我们在上一篇中提及的那些变量。例如 "),o("code",[_._v("copy($_)")]),_._v(" 或者 "),o("code",[_._v("copy($0)")])]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-4",imgAlt:"tool1.7-4"}}),_._v(" "),o("h2",{attrs:{id:"_6-store-as-global"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-store-as-global"}},[_._v("#")]),_._v(" 6.Store as global")]),_._v(" "),o("p",[_._v("如果你在 "),o("code",[_._v("console")]),_._v(" 中打印了一堆数据(例如 "),o("code",[_._v("App")]),_._v(" 中计算出来的一个数组),然后你想对这些数据进行额外操作，")]),_._v(" "),o("p",[_._v("例如，使用我们刚刚说的 "),o("code",[_._v("copy")]),_._v(" ，那就可以轻松将它转换成一个全局变量：\n只需右击，并且选择 “"),o("code",[_._v("Store as global variable")]),_._v("”(保存为全局变量) 这个选项。")]),_._v(" "),o("p",[_._v("第一次使用的话，它会创建一个名为 "),o("code",[_._v("temp1")]),_._v(" 的变量，然后是 "),o("code",[_._v("temp2")]),_._v("\n等等。这样你就可以操作各样的数据，而不用担心他们会被复写。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-5",imgAlt:"tool1.7-5"}}),_._v(" "),o("h2",{attrs:{id:"_7-copy-html-最快的方式"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-copy-html-最快的方式"}},[_._v("#")]),_._v(" 7.Copy HTML (最快的方式)")]),_._v(" "),o("p",[_._v("可能你知道右击或者点击在 "),o("code",[_._v("html")]),_._v(" 元素边上的省略号(...)就能将它 "),o("code",[_._v("copy")]),_._v(" 到操作系统剪贴板中 但你同样可以用非常古老的 "),o("code",[_._v("[ctrl] + [c]")]),_._v(" + "),o("code",[_._v("[ctrl] + [v]")]),_._v(" 大法来实现同样的效果！")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-6",imgAlt:"tool1.7-6"}}),_._v(" "),o("h2",{attrs:{id:"_8-console-assert"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-console-assert"}},[_._v("#")]),_._v(" 8."),o("code",[_._v("console.assert")])]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-7",imgAlt:"tool1.7-7"}}),_._v(" "),o("p",[_._v("当我们传入的第一个参数为"),o("strong",[_._v("假")]),_._v("时，"),o("code",[_._v("console.assert")]),_._v("打印跟在这个参数后面的值。当你需要在特殊情况下打印一些信息的时候这很有用 - 现在你可以在不使用"),o("code",[_._v("if")]),_._v("表达式的情况下做到这件事情。另外，你还可以白白得到一个堆栈的跟踪信息 ；-）")]),_._v(" "),o("p",[_._v("请注意，如果你使用的 "),o("code",[_._v("NodeJS")]),_._v(" 版本 "),o("code",[_._v("≤ 10.0")]),_._v(" ,那可能会中断后面代码的执行，但是在"),o("code",[_._v(". 10")]),_._v("的版本中被修复了(当然，在浏览器中使用是完全安全的)")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-8",imgAlt:"tool1.7-8"}}),_._v(" "),o("h2",{attrs:{id:"_9-console-table"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_9-console-table"}},[_._v("#")]),_._v(" 9."),o("code",[_._v("console.table")])]),_._v(" "),o("p",[_._v("令人惊讶的是，这一个小技巧在开发者中并没有多少人知道。如果你有一个数组(或者是类数组的对象，或者就是一个对象)，你可以使用 "),o("code",[_._v("console.table")]),_._v(" 方法以一个漂亮的表格的形式将它打印出来。它不仅会根据数组中的对象的所有属性去计算出表中的列名，而且这些列都是可以 "),o("strong",[_._v("缩放")]),_._v(" 甚至... "),o("strong",[_._v("排序")]),_._v(" ！😳")]),_._v(" "),o("p",[_._v("当列太多的时候，就可以通过第二个参数，只传入你想展示的列名。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-9",imgAlt:"tool1.7-9"}}),_._v(" "),o("h2",{attrs:{id:"_10-console-dir"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_10-console-dir"}},[_._v("#")]),_._v(" 10."),o("code",[_._v("console.dir")])]),_._v(" "),o("p",[_._v("最受欢迎的 "),o("code",[_._v("console.log")]),_._v(" 方法会将数据以格式化的形式打印出来，大多数的情况下默认的格式化很有用。但是有时候那可能不是你想看到的 - 最典型的例子就是：你想要打印一个 "),o("code",[_._v("DOM")]),_._v(" 节点。\n"),o("code",[_._v("console.log")]),_._v(" 会将这个交互式的元素渲染成像是从 "),o("code",[_._v("Elements")]),_._v(" 中剪切出来的一样。如果说你想要查看这个节点所关联到的真实的 "),o("code",[_._v("JavaScript")]),_._v(" 对象呢？并且想要查看他的属性等等？\n这样的情况下，如果需要更加直接表现形式来展示数据，就可以使用 "),o("code",[_._v("console.dir")]),_._v(" 。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-10",imgAlt:"tool1.7-10"}}),_._v(" "),o("h2",{attrs:{id:"_11-通过-h-来隐藏"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_11-通过-h-来隐藏"}},[_._v("#")]),_._v(" 11.通过 'h' 来隐藏")]),_._v(" "),o("p",[_._v("可以按下 "),o("code",[_._v("'h'")]),_._v(" 来隐藏在元素面板中被你选中的元素。再次按下 "),o("code",[_._v("'h'")]),_._v(" 使它出现。某些时候这是很有用的，例如你想截图，但是又不想里面包含一些敏感信息。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-11",imgAlt:"tool1.7-11"}}),_._v(" "),o("h2",{attrs:{id:"_12-使用-command-命令-菜单"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_12-使用-command-命令-菜单"}},[_._v("#")]),_._v(" 12.使用 Command (命令) 菜单")]),_._v(" "),o("p",[_._v("有一些 "),o("code",[_._v("Dev Tools")]),_._v(" 的功能被深深的隐藏在特别的 面板/菜单 中。甚至有一些还隐藏在他们（面板/菜单）下面。这也是为什么 "),o("code",[_._v("Command")]),_._v(" 菜单，是在 "),o("code",[_._v("Dev Tools")]),_._v(" 中必不可少的一个工具。")]),_._v(" "),o("p",[_._v("如果你使用过 "),o("code",[_._v("WebStorm")]),_._v(" 中的 "),o("code",[_._v("Find Action")]),_._v(" (查找动作) 或者 "),o("code",[_._v("Visual Studio Code")]),_._v(" 中的 "),o("code",[_._v("Command Palette")]),_._v(", 那么 ("),o("code",[_._v("Command")]),_._v(" 菜单) 也是类似的功能。可以这样调出它：")]),_._v(" "),o("ul",[o("li",[_._v("在 "),o("code",[_._v("Chrome")]),_._v(" 的调试打开的情况下 按下 [ "),o("code",[_._v("Ctrl]+[Shift]+[P]")]),_._v(" (or "),o("code",[_._v("[⌘]+[Shift]+[P]")]),_._v(" on Mac)")]),_._v(" "),o("li",[_._v("或者使用"),o("code",[_._v("DevTools")]),_._v(" 的 "),o("code",[_._v("dropdown")]),_._v(" 按钮的这个选项:")])]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-12",imgAlt:"tool1.7-12"}}),_._v(" "),o("h3",{attrs:{id:"截屏，大小通吃"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#截屏，大小通吃"}},[_._v("#")]),_._v(" 截屏，大小通吃")]),_._v(" "),o("p",[_._v("如果你想对某个特别的 "),o("code",[_._v("DOM")]),_._v(" 节点进行截图，选中那个节点，打开 "),o("code",[_._v("Command")]),_._v(" 菜单并且寻找节点截图的命令。")]),_._v(" "),o("p",[_._v("更好用的是：同样可以用这种方式全屏截图 - 使用 "),o("code",[_._v("Capture full size screenshot")]),_._v(" 。请注意，我们说的是 "),o("strong",[_._v("全屏")]),_._v(" ，并不是嵌入页面的一部分。我记得这可是得使用浏览器插件才能做到的！")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-13",imgAlt:"tool1.7-13"}}),_._v(" "),o("h3",{attrs:{id:"快速切换面板"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#快速切换面板"}},[_._v("#")]),_._v(" 快速切换面板")]),_._v(" "),o("p",[o("code",[_._v("DevTools")]),_._v(" 的部分使用双面板布局（例如：元素或者资源面板），"),o("code",[_._v("DevTools")]),_._v(" 经常根据屏幕可用的部分，将它们横向或者纵向的排列，以方便阅读的方式展示。有时候你并不喜欢这样布局。")]),_._v(" "),o("p",[_._v("（你是否重置过 "),o("code",[_._v("DevTools")]),_._v(" 呢？把 "),o("code",[_._v("样式面板")]),_._v(" 从 "),o("code",[_._v("html预览")]),_._v(" 的底部移动到右边或者其他的周围位置？是的，这就是我所说的😉）")]),_._v(" "),o("p",[_._v("打开 "),o("code",[_._v("Commands")]),_._v(" 菜单并且输入 "),o("code",[_._v("layout")]),_._v(" ,你会看到 2 到 3 个可供选择的项(当前你已经激活的选项不会在这里显示)：")]),_._v(" "),o("ul",[o("li",[_._v("使用横向面板布局")]),_._v(" "),o("li",[_._v("使用纵向面板布局")]),_._v(" "),o("li",[_._v("使用自动面板布局")])]),_._v(" "),o("p",[_._v("选择你需要的")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-14",imgAlt:"tool1.7-14"}}),_._v(" "),o("h3",{attrs:{id:"快速切换主题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#快速切换主题"}},[_._v("#")]),_._v(" 快速切换主题")]),_._v(" "),o("p",[_._v("你是否讨厌突然的强光，并且无法忍受一直看着白光闪闪的屏幕？或者你一直都在黑暗的模式下工作，但突然太阳出来了，照在你的 "),o("code",[_._v("DevTools")]),_._v(" 上导致你什么都看不到？")]),_._v(" "),o("p",[_._v("在 "),o("code",[_._v("Commands")]),_._v("菜单中寻找与 "),o("code",[_._v("theme")]),_._v(" 相关的选项，以实现在明亮&暗黑两种主题之间的切换。")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-15",imgAlt:"tool1.7-15"}}),_._v(" "),o("h3",{attrs:{id:"给-logs-加上时间戳"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#给-logs-加上时间戳"}},[_._v("#")]),_._v(" 给 "),o("code",[_._v("logs")]),_._v(" 加上时间戳")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-16",imgAlt:"tool1.7-16"}}),_._v(" "),o("h2",{attrs:{id:"_13-插入样式规则的按钮"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_13-插入样式规则的按钮"}},[_._v("#")]),_._v(" 13.插入样式规则的按钮")]),_._v(" "),o("p",[_._v("当你把鼠标放在样式选择器的选择区域的最后时，你会看到几个按钮，它们可以让你快速的使用 "),o("code",[_._v("Color")]),_._v(" 和 "),o("code",[_._v("Shadow")]),_._v(" 编辑器添加 "),o("code",[_._v("CSS")]),_._v(" 属性：")]),_._v(" "),o("ul",[o("li",[o("code",[_._v("text-shadow")])]),_._v(" "),o("li",[o("code",[_._v("box-shadow")])]),_._v(" "),o("li",[o("code",[_._v("color")])]),_._v(" "),o("li",[o("code",[_._v("background-color")])])]),_._v(" "),o("p",[_._v("...打开相应的编辑器：")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-17",imgAlt:"tool1.7-17"}}),_._v(" "),o("h2",{attrs:{id:"_14-conditional-breakpoints-条件断点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_14-conditional-breakpoints-条件断点"}},[_._v("#")]),_._v(" 14."),o("code",[_._v("Conditional breakpoints")]),_._v(" 条件断点")]),_._v(" "),o("p",[_._v("有时设置的断点被执行太多次了：想想看，有一个对 200 个元素的循环，但你只对第 110  次循环的结果感兴趣，或者只对一些满足其他的特殊条件的结果感兴趣。")]),_._v(" "),o("p",[_._v("这样的情况下，就可以设置一个条件断点。实现：")]),_._v(" "),o("ul",[o("li",[_._v("右击行号并且选择 "),o("code",[_._v("Add conditional breakpoint...(添加条件断点)")]),_._v(" 的选项")]),_._v(" "),o("li",[_._v("或者右击一个已经设置的断点并且选择 "),o("code",[_._v("Edit breakpoint(编辑断点)")])]),_._v(" "),o("li",[_._v("然后输入一个执行结果为 "),o("code",[_._v("true")]),_._v(" 或者 "),o("code",[_._v("false")]),_._v(" 的表达式（它的值并不需要明确的为 "),o("code",[_._v("true")]),_._v(" 或者 "),o("code",[_._v("false")]),_._v(" 尽管那个弹出框的描述是这样说的）。")])]),_._v(" "),o("p",[_._v("在这个表达式中，你可以获取到任何这段代码可以获取到的东西，即这一行的作用域。\n现在条件满足的话，断点就会暂停代码的执行")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-18",imgAlt:"tool1.7-18"}}),_._v(" "),o("h2",{attrs:{id:"_15-the-ninja（忍者）-console-log"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_15-the-ninja（忍者）-console-log"}},[_._v("#")]),_._v(" 15.The ninja（忍者） console.log")]),_._v(" "),o("p",[_._v("得益于条件断点，现在可以开始灵活使用这个技术。因为：")]),_._v(" "),o("ul",[o("li",[_._v("每一个条件都必须经过判断 - 也就是 - 运行 - 每当应用执行到这一行。")]),_._v(" "),o("li",[_._v("并且如果条件返回的是"),o("code",[_._v("falsy")]),_._v("的值(例如. "),o("code",[_._v("undefined")]),_._v(" )，它并不会暂停..")])]),_._v(" "),o("p",[_._v("所以，与其在源码的不同地方去添加 "),o("code",[_._v("console.log")]),_._v(" / "),o("code",[_._v("console.table")]),_._v(" / "),o("code",[_._v("console.time")]),_._v(" 等等，不如直接使用条件判断来将它们 “连接” 到 "),o("code",[_._v("Source")]),_._v("  面板中。它们不会停止，会一直执行，并且当你不再需要它们的时候，有一个地方( "),o("code",[_._v("Breakpoints section")]),_._v(" )会列出它们。点两下鼠标就可以把所有的都移除，就像一堆忍者一样消失！")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-19",imgAlt:"tool1.7-19"}}),_._v(" "),o("blockquote",[o("p",[_._v("这个技术在调试生产环境的问题时同样很有用，你可以将 "),o("code",[_._v("console logs")]),_._v(" 轻松插入到 "),o("code",[_._v("source")]),_._v(" 里。")])]),_._v(" "),o("h2",{attrs:{id:"_16-switch-between-2-recent-devtools-placements-在两个最近使用的-devtools-的展示位置之间切换"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_16-switch-between-2-recent-devtools-placements-在两个最近使用的-devtools-的展示位置之间切换"}},[_._v("#")]),_._v(" 16.Switch between 2 recent DevTools placements 在两个最近使用的 DevTools 的展示位置之间切换")]),_._v(" "),o("p",[_._v("我通常会发现自己在 "),o("code",[_._v("95％")]),_._v(" 的时间内都在使用 "),o("code",[_._v("DevTools")]),_._v(" 窗口中的一个个人最喜欢的位置（底部的 "),o("code",[_._v("dock")]),_._v(")，但是有时我想切换到另外一个(通常是右边的 "),o("code",[_._v("dock")]),_._v(")。那么你可以通过 "),o("code",[_._v("DevTools")]),_._v(" 的下拉菜单，或者命令菜单"),o("code",[_._v("...")]),_._v("或者使用一个快捷键 "),o("code",[_._v("ctrl + shift + D")]),_._v(" ("),o("code",[_._v("⌘ + shift + D")]),_._v(" Mac)。")]),_._v(" "),o("p",[_._v("它将会在你现在所处的位置以及你之前使用的位置之间切换：")]),_._v(" "),o("image-image",{attrs:{imgSrc:"/img/tool1.7-20",imgAlt:"tool1.7-20"}}),_._v(" "),o("star-star"),_._v(" "),o("comment-comment"),_._v(" "),o("back-to-top")],1)}),[],!1,null,null,null);v.default=t.exports}}]);